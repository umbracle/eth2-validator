syntax = "proto3";

package proto;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = "/internal/server/proto";

service ValidatorService {
    rpc ValidatorList(ValidatorListRequest) returns (ValidatorListResponse);
    rpc ListDuties(ListDutiesRequest) returns (ListDutiesResponse);
    rpc GetGenesis(google.protobuf.Empty) returns (Genesis);
}

message Genesis {
    bytes root = 1;
}

message ValidatorListRequest{

}

message ValidatorListResponse{
    repeated Validator validators = 1;
}

message ListDutiesRequest {
    int64 validatorId = 1;
}

message ListDutiesResponse {
    repeated Duty duties = 1;
}

message Duty {
    // id is the identifier of the duty
    string id = 1;

    // pubKey is the public key of the validator that signs the job
    string pubKey = 2;

    // slot is the slot at which this job was created
    uint64 slot = 3;

    // active_time is the time when this duty is meant to be executed
    google.protobuf.Timestamp active_time = 4;
    
    // blockedBy is the list of duties for which this duty is blocked
    repeated string blockedBy = 5;

    uint64 epoch = 6;
    
    uint64 validatorIndex = 8;
    
    oneof job {
        BlockProposal blockProposal = 20;
        Attestation attestation = 21;
        AttestationAggregate attestationAggregate = 22;
        SyncCommittee syncCommittee = 23;
        SyncCommitteeAggregate syncCommitteeAggregate = 24;
    }
    
    Result result = 30;

    State state = 31;

    Fork fork = 32;

    enum Fork {
        Phase0 = 0;
        Altair = 1;
        Bellatrix = 2;
    }
    
    message Result {
        BlockProposalResult blockProposal = 50;
        AttestationResult Attestation = 51;
        AttestationAggregateResult AttestationAggregate = 52;
        SyncCommitteeResult SyncCommittee = 53;
        SyncCommitteeAggregateResult SyncCommitteeAggregate = 54;
    }

    message BlockProposal {
    }
    
    message BlockProposalResult{
        bytes root = 2;
        bytes signature = 3;
    }

    message Attestation {
        uint64 committeeIndex = 1;
        uint64 committeeLength = 2;
    }

    message AttestationResult{
        bytes root = 2;

        Checkpoint source = 3;
        Checkpoint target = 4;
    
        message Checkpoint {
            bytes root = 1;
            uint64 epoch = 2;
        }
    }

    message AttestationAggregate {
        bytes selectionProof = 1;
    }

    message AttestationAggregateResult{
    }

    message SyncCommittee {
    }
    
    message SyncCommitteeResult{
    }

    message SyncCommitteeAggregate {
        bytes selectionProof = 1;
        uint64 subCommitteeIndex = 2;
    }

    message SyncCommitteeAggregateResult {
    }

    enum State {
        UNKNOWN = 0;
        PENDING = 1;
        COMPLETE = 2;
        FAILED = 3;
        CANCELED = 4;
    }
}

message Validator {
    uint64 index = 1;
    string pubKey = 2;
    uint64 activationEpoch = 3;
    string privKey = 4; // provisional
}
